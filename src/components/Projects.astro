---
import { Image } from "astro:assets";
import { myResume } from "../data/resume";
import { getOptimizedImage } from "../utils"
---

<section
  id="projects"
  class="py-12 sm:py-16 md:py-20 bg-gray-50 dark:bg-gray-800 transition-colors duration-300"
>
  <div class="container mx-auto px-4">
    <h2 class="text-2xl sm:text-3xl font-bold mb-8 sm:mb-12 text-center fade-in">Side Projects</h2>

    <div class="flex flex-wrap justify-center gap-4 sm:gap-6 md:gap-8">
      {
        myResume.sideProjects.map(async (project) => {
          const optimizedImage = await getOptimizedImage(project.image);
          const isOptimized = typeof optimizedImage === 'object';

          return (
            <div class="w-full sm:w-1/2 lg:w-1/3 px-2">
              <div class="bg-white dark:bg-gray-900 rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 fade-in h-full">
                <div class="relative">
                  {isOptimized ? (
                    <Image
                      src={optimizedImage}
                      alt={`${project.title} logo`}
                      class="w-auto h-40 sm:h-48 object-cover justify-self-center"
                      width={480}
                      height={240}
                      loading="lazy"
                      format="webp"
                    />
                  ) : (
                    <img
                      src={project.image}
                      alt={`${project.title} logo`}
                      class="w-auto h-40 sm:h-48 object-cover justify-self-center"
                      width={480}
                      height={240}
                      loading="lazy"
                    />
                  )}
                  {project.isProd && (
                    <div class="absolute top-0 right-0 bg-indigo-600 text-white text-xs font-bold px-2 py-1 m-2 rounded">
                      Production
                    </div>
                  )}
                </div>

                <div class="p-4 sm:p-6">
                  <h3 class="text-lg sm:text-xl font-bold mb-2">{project.title}</h3>

                  <p class="text-base text-gray-700 dark:text-gray-300 mb-3 sm:mb-4">
                    {project.description}
                  </p>

                  <div class="flex flex-wrap gap-1.5 sm:gap-2 mb-3 sm:mb-4">
                    {project.stack.map((tech) => (
                      <span class="px-1.5 sm:px-2 py-0.5 sm:py-1 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-300 rounded text-base">
                        {tech}
                      </span>
                    ))}
                  </div>

                  <div class="flex justify-between items-center">
                    {project?.source && (
                      <a
                        href={project.source}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 font-medium transition-colors text-base"
                      >
                        View Source
                      </a>
                    )}

                    {project?.url && (
                      <a
                        href={project.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 font-medium transition-colors text-base"
                      >
                        Live Demo
                      </a>
                    )}
                  </div>
                </div>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</section>
